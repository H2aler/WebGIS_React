{"version":3,"file":"index-D9VaMtZK.js","sources":["../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/has.js","../../node_modules/ol/asserts.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-parse/node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../../node_modules/ol/math.js","../../node_modules/ol/color.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/View.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/size.js","../../node_modules/ol/Map.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/Tile.js","../../node_modules/ol/Image.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/Feature.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/Overlay.js","../../node_modules/ol/control/ScaleLine.js","../../node_modules/ol/interaction/Draw.js","../../node_modules/ol/interaction/Modify.js","../../node_modules/ol/events/SnapEvent.js","../../node_modules/ol/interaction/Snap.js","../../main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\nconst rgb = {\n\tname: 'rgb',\n\tmin: [0, 0, 0],\n\tmax: [255, 255, 255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n\nexport default rgb;\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nconst xyz = {\n\tname: 'xyz',\n\tmin: [0, 0, 0],\n\tchannel: ['X', 'Y', 'Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931'],\n\n\t// Whitepoint reference values with observer/illuminant\n\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\twhitepoint: {\n\t\t//1931 2°\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA: [109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100, 100, 100]\n\t\t},\n\n\t\t//1964  10°\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA: [111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100, 100, 100]\n\t\t}\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t// FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\n\nvar luv = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0, -134, -140],\n\tmax: [100, 224, 122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function (arg, i, o) {\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0, 0, 0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow((l + 16) / 116, 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\nexport default (luv);\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function (arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y / yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1 / 3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n// cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0, 0, 0],\n\tmax: [100, 100, 360],\n\n\tluv: function (luv) {\n\t\tvar l = luv[0],\n\t\t\tc = luv[1],\n\t\t\th = luv[2],\n\t\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function (arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default (lchuv);\n\nluv.lchuv = function (luv) {\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u * u + v * v);\n\tvar hr = Math.atan2(v, u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l, c, h]\n};\n\nxyz.lchuv = function (arg) {\n\treturn luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nvar hsl = {\n\tname: 'hsl',\n\tmin: [0, 0, 0],\n\tmax: [360, 100, 100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function (hsl) {\n\t\tvar h = hsl[0] / 360, s = hsl[1] / 100, l = hsl[2] / 100, t1, t2, t3, rgb, val, i = 0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (; i < 3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t\t\t3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\t\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\nexport default (hsl);\n\n\n//extend rgb\nrgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tmin = Math.min(r, g, b),\n\t\tmax = Math.max(r, g, b),\n\t\tdelta = max - min,\n\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\t//FIXME h is possibly undefined\n\t//@ts-ignore\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","import 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport OSM from 'ol/source/OSM';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport { fromLonLat, transform, transformExtent } from 'ol/proj';\r\nimport { defaults as defaultControls, Zoom, ScaleLine } from 'ol/control';\r\nimport { Point, LineString, Polygon } from 'ol/geom';\r\nimport { Feature } from 'ol';\r\nimport { Style, Icon, Stroke, Fill, Circle as CircleStyle, Text } from 'ol/style';\r\nimport { Draw, Modify, Snap } from 'ol/interaction';\r\nimport { getLength, getArea } from 'ol/sphere';\r\nimport { unByKey } from 'ol/Observable';\r\nimport Overlay from 'ol/Overlay';\r\n\r\n// 지도 초기화\r\nclass WebGISMap {\r\n    constructor() {\r\n        this.map = null;\r\n        this.vectorSource = new VectorSource();\r\n        this.vectorLayer = new VectorLayer({\r\n            source: this.vectorSource,\r\n            style: (feature) => this.getFeatureStyle(feature)\r\n        });\r\n        \r\n        this.draw = null;\r\n        this.snap = null;\r\n        this.modify = null;\r\n        this.currentTool = null;\r\n        this.measurementListener = null;\r\n        this.clickListener = null;\r\n        this.measurementFeatures = [];\r\n        this.measurementResults = [];\r\n        this.measurementHistory = [];\r\n        this.searchResults = [];\r\n        this.distanceOverlay = null;\r\n        this.currentDistanceFeature = null;\r\n    // 측정 오버레이들\r\n        this.liveTooltipOverlay = null; // 전체 길이 툴팁\r\n        this.segmentOverlay = null;     // 마지막 구간 배지(수동 모드)\r\n        // 스마트 거리 측정 상태\r\n        this.smartDistanceActive = false;\r\n        this.smartStartCoord = null; // EPSG:3857\r\n        this.smartCoords = [];\r\n        this.smartLineFeature = null;\r\n        this.smartClickKey = null;\r\n        this.smartDblKey = null;\r\n        this.smartSegmentOverlay = null; // 스마트 모드 구간 배지\r\n\r\n        // 멀티-스마트 거리 측정 (검색 결과 간 경로)\r\n        this.multiRouteActive = false;\r\n        this.routeCoords = []; // EPSG:3857 좌표 배열\r\n        this.routeLineFeature = null;\r\n        \r\n        this.initMap();\r\n        this.initControls();\r\n        this.initSearch();\r\n        this.initTheme();\r\n        this.initEventListeners();\r\n        this.renderFavorites();\r\n        this.bindFullscreen();\r\n        this.bindMeasureButtons();\r\n    }\r\n\r\n    // 지도 초기화\r\n    initMap() {\r\n        // 기본 OSM 레이어\r\n        const osmLayer = new TileLayer({\r\n            source: new OSM(),\r\n            title: 'OpenStreetMap'\r\n        });\r\n\r\n        // 위성 이미지 레이어\r\n        const satelliteLayer = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n                crossOrigin: 'anonymous'\r\n            }),\r\n            title: '위성 이미지',\r\n            visible: false\r\n        });\r\n\r\n        // 지형도 레이어\r\n        const terrainLayer = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n                crossOrigin: 'anonymous'\r\n            }),\r\n            title: '지형도',\r\n            visible: false\r\n        });\r\n\r\n        this.layers = {\r\n            osm: osmLayer,\r\n            satellite: satelliteLayer,\r\n            terrain: terrainLayer\r\n        };\r\n\r\n        // 지도 생성\r\n        this.map = new Map({\r\n            target: 'map',\r\n            layers: [osmLayer, satelliteLayer, terrainLayer, this.vectorLayer],\r\n            view: new View({\r\n                center: fromLonLat([127.7669, 37.5665]), // 서울 중심\r\n                zoom: 10,\r\n                maxZoom: 19,\r\n                minZoom: 3\r\n            }),\r\n            controls: defaultControls({\r\n                zoom: true,\r\n                attribution: true\r\n            }).extend([\r\n                new ScaleLine({\r\n                    units: 'metric'\r\n                })\r\n            ])\r\n        });\r\n\r\n        // 좌표 표시 이벤트\r\n        this.map.on('pointermove', (event) => {\r\n            const coordinate = event.coordinate;\r\n            const lonLat = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\r\n            document.getElementById('coordinates').innerHTML = \r\n                `경도: ${lonLat[0].toFixed(6)}<br>위도: ${lonLat[1].toFixed(6)}`;\r\n        });\r\n\r\n        // 지도 클릭 이벤트 (마커 추가용)\r\n        this.map.on('click', (event) => {\r\n            if (this.currentTool === 'marker') {\r\n                this.addMarker(event.coordinate);\r\n                this.deactivateCurrentTool();\r\n                document.getElementById('addMarker').classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // 컨트롤 초기화\r\n    initControls() {\r\n        // 줌 컨트롤\r\n        document.getElementById('zoomIn').addEventListener('click', () => {\r\n            const view = this.map.getView();\r\n            const zoom = view.getZoom();\r\n            view.animate({\r\n                zoom: zoom + 1,\r\n                duration: 250\r\n            });\r\n        });\r\n\r\n        document.getElementById('zoomOut').addEventListener('click', () => {\r\n            const view = this.map.getView();\r\n            const zoom = view.getZoom();\r\n            view.animate({\r\n                zoom: zoom - 1,\r\n                duration: 250\r\n            });\r\n        });\r\n\r\n        document.getElementById('fullExtent').addEventListener('click', () => {\r\n            const extent4326 = [127.0, 37.0, 128.5, 38.0];\r\n            const extent3857 = transformExtent(extent4326, 'EPSG:4326', 'EPSG:3857');\r\n            this.map.getView().fit(extent3857, {\r\n                padding: [50, 50, 50, 50],\r\n                duration: 1000\r\n            });\r\n            this.toast('전체 영역으로 이동했습니다.');\r\n        });\r\n\r\n        // 레이어 선택\r\n        document.getElementById('layerSelect').addEventListener('change', (event) => {\r\n            this.switchLayer(event.target.value);\r\n            this.toast(`레이어 전환: ${event.target.value}`);\r\n        });\r\n    }\r\n\r\n    // 검색 기능 초기화\r\n    initSearch() {\r\n        const searchInput = document.getElementById('searchInput');\r\n        const searchBtn = document.getElementById('searchBtn');\r\n        const searchResults = document.getElementById('searchResults');\r\n        let activeIndex = -1;\r\n\r\n        // 검색 버튼 클릭\r\n        searchBtn.addEventListener('click', () => {\r\n            this.performSearch(searchInput.value);\r\n        });\r\n\r\n        // 엔터키 검색\r\n        searchInput.addEventListener('keypress', (e) => {\r\n            if (e.key === 'Enter') {\r\n                this.performSearch(searchInput.value);\r\n            }\r\n        });\r\n\r\n        // 입력 시 자동 검색 (디바운싱)\r\n        let searchTimeout;\r\n        searchInput.addEventListener('input', (e) => {\r\n            clearTimeout(searchTimeout);\r\n            searchTimeout = setTimeout(() => {\r\n                if (e.target.value.length >= 2) {\r\n                    this.performSearch(e.target.value);\r\n                } else {\r\n                    this.hideSearchResults();\r\n                }\r\n            }, 300);\r\n        });\r\n\r\n        // 검색 결과 외부 클릭 시 숨기기\r\n        document.addEventListener('click', (e) => {\r\n            if (!searchInput.contains(e.target) && !searchBtn.contains(e.target) && !searchResults.contains(e.target)) {\r\n                this.hideSearchResults();\r\n            }\r\n        });\r\n\r\n        // 키보드 탐색\r\n        searchInput.addEventListener('keydown', (e) => {\r\n            const items = Array.from(searchResults.querySelectorAll('.search-result-item'));\r\n            if (!items.length) return;\r\n            if (e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                activeIndex = (activeIndex + 1) % items.length;\r\n                this.updateActiveSearchItem(items, activeIndex);\r\n            } else if (e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                activeIndex = (activeIndex - 1 + items.length) % items.length;\r\n                this.updateActiveSearchItem(items, activeIndex);\r\n            } else if (e.key === 'Enter') {\r\n                e.preventDefault();\r\n                if (activeIndex >= 0) {\r\n                    items[activeIndex].querySelector('.search-result-content').click();\r\n                } else if (searchBtn) {\r\n                    searchBtn.click();\r\n                }\r\n            } else if (e.key === 'Escape') {\r\n                this.hideSearchResults();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateActiveSearchItem(items, index) {\r\n        items.forEach(el => el.classList.remove('active'));\r\n        if (items[index]) {\r\n            items[index].classList.add('active');\r\n            items[index].scrollIntoView({ block: 'nearest' });\r\n        }\r\n    }\r\n\r\n    async performSearch(query) {\r\n        if (!query.trim()) {\r\n            this.hideSearchResults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log('🔍 검색 시작:', query);\r\n            \r\n            // 로딩 상태 표시\r\n            this.showSearchLoading();\r\n            \r\n            // Nominatim API를 사용한 지오코딩\r\n            const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5&addressdetails=1&countrycodes=kr,jp,cn,us,gb,fr,de,it,es,ca,au`;\r\n            console.log('📡 API 요청 URL:', url);\r\n            \r\n            const response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'User-Agent': 'WebGIS-Application/1.0'\r\n                }\r\n            });\r\n            \r\n            console.log('📥 응답 상태:', response.status, response.statusText);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`검색 요청 실패: ${response.status} ${response.statusText}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('✅ 검색 결과:', data);\r\n\r\n            this.searchResults = data;\r\n            this.displaySearchResults(data);\r\n        } catch (error) {\r\n            console.error('❌ 검색 오류:', error);\r\n            this.showSearchError(`검색 중 오류가 발생했습니다: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    displaySearchResults(results) {\r\n        const searchResults = document.getElementById('searchResults');\r\n        \r\n        if (!results || results.length === 0) {\r\n            searchResults.innerHTML = '<div class=\"search-result-item no-results\">🔍 검색 결과가 없습니다.</div>';\r\n            searchResults.classList.add('show');\r\n            return;\r\n        }\r\n\r\n        console.log('📋 검색 결과 표시:', results.length, '개');\r\n\r\n        const headerHTML = `\r\n            <div class=\"results-header\">\r\n                <div class=\"results-meta\">결과 ${results.length}건</div>\r\n                <div class=\"results-actions\">\r\n                    <button id=\"clearResults\">지우기</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        const resultsHTML = results.map((result, index) => {\r\n            const name = result.display_name.split(',')[0];\r\n            const details = result.display_name.split(',').slice(1, 3).join(',');\r\n            \r\n            return `\r\n                <div class=\"search-result-item\" data-lat=\"${result.lat}\" data-lon=\"${result.lon}\" data-index=\"${index}\">\r\n                    <div class=\"search-result-content\">\r\n                        <div class=\"search-result-name\">📍 ${name}</div>\r\n                        <div class=\"search-result-details\">${details}</div>\r\n                    </div>\r\n                    <div class=\"search-result-actions\">\r\n                        <button class=\"favorite-btn\" title=\"즐겨찾기에 추가\" data-index=\"${index}\">⭐</button>\r\n                        <button class=\"smart-measure-btn\" title=\"스마트 거리 측정\" data-index=\"${index}\" data-type=\"distance\">📏</button>\r\n                        <button class=\"smart-measure-btn\" title=\"스마트 면적 측정\" data-index=\"${index}\" data-type=\"area\">📐</button>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }).join('');\r\n\r\n        searchResults.innerHTML = headerHTML + resultsHTML;\r\n        searchResults.classList.add('show');\r\n\r\n        const clearBtn = document.getElementById('clearResults');\r\n        if (clearBtn) clearBtn.addEventListener('click', () => this.hideSearchResults());\r\n\r\n        // 검색 결과 클릭 이벤트 (콘텐츠 영역)\r\n        searchResults.querySelectorAll('.search-result-item .search-result-content').forEach(content => {\r\n            content.addEventListener('click', (e) => {\r\n                const parent = content.closest('.search-result-item');\r\n                const lat = parseFloat(parent.dataset.lat);\r\n                const lon = parseFloat(parent.dataset.lon);\r\n                const index = parseInt(parent.dataset.index);\r\n                // 스마트 거리 측정 시작점으로 설정\r\n                this.startSmartDistanceFrom(lat, lon);\r\n                this.hideSearchResults();\r\n                document.getElementById('searchInput').value = content.querySelector('.search-result-name').textContent.replace('📍 ', '');\r\n            });\r\n        });\r\n\r\n        // 즐겨찾기 버튼 이벤트\r\n        searchResults.querySelectorAll('.favorite-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n                const index = parseInt(btn.dataset.index);\r\n                this.addToFavorites(results[index]);\r\n            });\r\n        });\r\n\r\n        // 스마트 측정 버튼 이벤트\r\n        searchResults.querySelectorAll('.smart-measure-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n                const index = parseInt(btn.dataset.index);\r\n                const type = btn.dataset.type;\r\n                const res = results[index];\r\n                const name = res.display_name.split(',')[0];\r\n                if (type === 'distance') {\r\n                    this.handleMultiSmartDistanceClick(parseFloat(res.lat), parseFloat(res.lon), name);\r\n                } else {\r\n                    this.activateTool('area');\r\n                    document.getElementById('measurementResult').innerHTML = `<div class=\"measurement-guide\">🎯 스마트 면적 측정: \"${name}\" 기준으로 지도에서 다각형을 그리세요.</div>`;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // 즐겨찾기 관리\r\n    addToFavorites(result) {\r\n        const name = result.display_name.split(',')[0];\r\n        const item = {\r\n            id: Date.now().toString(),\r\n            name,\r\n            lat: parseFloat(result.lat),\r\n            lon: parseFloat(result.lon),\r\n            addedAt: new Date().toISOString()\r\n        };\r\n        const list = this.getFavorites();\r\n        const exists = list.some(f => f.lat === item.lat && f.lon === item.lon);\r\n        if (exists) return;\r\n        list.push(item);\r\n        localStorage.setItem('favorites', JSON.stringify(list));\r\n        this.renderFavorites();\r\n    }\r\n\r\n    getFavorites() {\r\n        try {\r\n            return JSON.parse(localStorage.getItem('favorites')) || [];\r\n        } catch (_) { return []; }\r\n    }\r\n\r\n    removeFavorite(id) {\r\n        const list = this.getFavorites().filter(f => f.id !== id);\r\n        localStorage.setItem('favorites', JSON.stringify(list));\r\n        this.renderFavorites();\r\n    }\r\n\r\n    renderFavorites() {\r\n        const container = document.getElementById('favoritesList');\r\n        const list = this.getFavorites();\r\n        if (!container) return;\r\n        if (list.length === 0) {\r\n            container.innerHTML = '<div class=\"empty\">즐겨찾기가 없습니다.</div>';\r\n            return;\r\n        }\r\n        container.innerHTML = list.map(item => `\r\n            <div class=\"favorite-item\">\r\n                <div class=\"favorite-name\">📍 ${item.name}</div>\r\n                <div class=\"favorite-actions\">\r\n                    <button class=\"go-favorite\" data-id=\"${item.id}\" data-lat=\"${item.lat}\" data-lon=\"${item.lon}\">이동</button>\r\n                    <button class=\"remove-favorite\" data-id=\"${item.id}\">삭제</button>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n        container.querySelectorAll('.go-favorite').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                const lat = parseFloat(btn.dataset.lat);\r\n                const lon = parseFloat(btn.dataset.lon);\r\n                this.goToLocation(lat, lon);\r\n            });\r\n        });\r\n        container.querySelectorAll('.remove-favorite').forEach(btn => {\r\n            btn.addEventListener('click', () => this.removeFavorite(btn.dataset.id));\r\n        });\r\n    }\r\n\r\n    // 테마 토글\r\n    initTheme() {\r\n        const btn = document.getElementById('themeToggle');\r\n        const saved = localStorage.getItem('theme') || 'light';\r\n        document.documentElement.dataset.theme = saved;\r\n        if (btn) {\r\n            btn.addEventListener('click', () => {\r\n                const next = (document.documentElement.dataset.theme === 'light') ? 'dark' : 'light';\r\n                document.documentElement.dataset.theme = next;\r\n                localStorage.setItem('theme', next);\r\n            });\r\n        }\r\n    }\r\n\r\n    // 스마트 거리 측정: 검색 결과 지점을 시작점으로 설정하고, 사용자가 추가 클릭한 지점까지 누적 거리 계산\r\n    startSmartDistanceFrom(lat, lon) {\r\n        // 시작점 표시 및 지도 이동\r\n        const start3857 = transform([lon, lat], 'EPSG:4326', 'EPSG:3857');\r\n        this.goToLocation(lat, lon);\r\n\r\n        // 상태 초기화\r\n        this.smartDistanceActive = true;\r\n        this.smartStartCoord = start3857;\r\n        this.smartCoords = [start3857];\r\n\r\n        // 기존 라인 제거\r\n        if (this.smartLineFeature) {\r\n            this.vectorSource.removeFeature(this.smartLineFeature);\r\n            this.smartLineFeature = null;\r\n        }\r\n\r\n        // 안내 메시지\r\n        document.getElementById('measurementResult').innerHTML =\r\n            '<div class=\"measurement-guide\">시작점이 설정되었습니다. 지도를 클릭해 지점을 추가하세요. 더블클릭으로 측정을 완료합니다.</div>';\r\n\r\n        // 지도 클릭으로 지점 추가\r\n        if (this.smartClickKey) this.map.un('click', this.smartClickKey);\r\n        this.smartClickKey = this.map.on('click', (evt) => {\r\n            if (!this.smartDistanceActive) return;\r\n            const coord = evt.coordinate;\r\n            this.smartCoords.push(coord);\r\n            this.updateSmartDistanceLine();\r\n        });\r\n\r\n        // 더블클릭으로 완료\r\n        if (this.smartDblKey) this.map.un('dblclick', this.smartDblKey);\r\n        this.smartDblKey = this.map.on('dblclick', (evt) => {\r\n            if (!this.smartDistanceActive) return;\r\n            evt.preventDefault?.();\r\n            this.finishSmartDistance();\r\n        });\r\n    }\r\n\r\n    // 멀티-스마트: 검색 결과 지점 간 경로 누적\r\n    handleMultiSmartDistanceClick(lat, lon, name) {\r\n        const coord3857 = transform([lon, lat], 'EPSG:4326', 'EPSG:3857');\r\n        // 경로 시작이 아니면 중간/마지막 선택\r\n        if (!this.multiRouteActive) {\r\n            this.multiRouteActive = true;\r\n            this.routeCoords = [coord3857];\r\n            this.toast(`시작점: ${name}`);\r\n            document.getElementById('measurementResult').innerHTML = '<div class=\"measurement-guide\">다음 검색 결과의 📏을 눌러 중간 또는 마지막 구간을 선택하세요.</div>';\r\n            return;\r\n        }\r\n\r\n        // 지도 위 선택 패널 표시\r\n        const panel = document.getElementById('routeChoice');\r\n        const nameEl = document.getElementById('routeChoiceName');\r\n        const addMid = document.getElementById('routeAddMid');\r\n        const addLast = document.getElementById('routeAddLast');\r\n        const cancelBtn = document.getElementById('routeCancelChoice');\r\n        nameEl.textContent = name;\r\n        panel.style.display = 'block';\r\n        // 검색창 우측으로 위치 이동\r\n        const searchEl = document.querySelector('.search-container');\r\n        if (searchEl) {\r\n            const rect = searchEl.getBoundingClientRect();\r\n            panel.style.top = `${rect.top + rect.height + 8}px`;\r\n            panel.style.left = `${rect.right + 8}px`;\r\n        }\r\n\r\n        const onChooseMid = () => {\r\n            panel.style.display = 'none';\r\n            addMid.removeEventListener('click', onChooseMid);\r\n            addLast.removeEventListener('click', onChooseLast);\r\n            cancelBtn.removeEventListener('click', onCancel);\r\n            this.routeCoords.push(coord3857);\r\n            this.updateRoutePreview();\r\n            this.toast(`중간 구간 추가: ${name}`);\r\n        };\r\n        const onChooseLast = () => {\r\n            panel.style.display = 'none';\r\n            addMid.removeEventListener('click', onChooseMid);\r\n            addLast.removeEventListener('click', onChooseLast);\r\n            cancelBtn.removeEventListener('click', onCancel);\r\n            this.routeCoords.push(coord3857);\r\n            this.updateRoutePreview();\r\n            this.finishMultiRoute();\r\n        };\r\n        const onCancel = () => {\r\n            panel.style.display = 'none';\r\n            addMid.removeEventListener('click', onChooseMid);\r\n            addLast.removeEventListener('click', onChooseLast);\r\n            cancelBtn.removeEventListener('click', onCancel);\r\n        };\r\n        addMid.addEventListener('click', onChooseMid);\r\n        addLast.addEventListener('click', onChooseLast);\r\n        cancelBtn.addEventListener('click', onCancel);\r\n    }\r\n\r\n    updateRoutePreview() {\r\n        const line = new LineString(this.routeCoords);\r\n        if (!this.routeLineFeature) {\r\n            this.routeLineFeature = new Feature({ geometry: line });\r\n            this.routeLineFeature.setStyle(new Style({ stroke: new Stroke({ color: '#1e90ff', width: 3 }) }));\r\n            this.vectorSource.addFeature(this.routeLineFeature);\r\n        } else {\r\n            this.routeLineFeature.setGeometry(line);\r\n        }\r\n    }\r\n\r\n    finishMultiRoute() {\r\n        if (this.routeCoords.length < 2) { this.resetMultiRoute(); return; }\r\n        // 구간 합산\r\n        let total = 0;\r\n        const segments = [];\r\n        for (let i = 1; i < this.routeCoords.length; i++) {\r\n            const seg = new LineString([this.routeCoords[i-1], this.routeCoords[i]]);\r\n            const len = getLength(seg);\r\n            total += len;\r\n            segments.push(this.formatDistance(len));\r\n        }\r\n        const resultText = this.formatDistance(total);\r\n        this.measurementResults.push({ type: 'distance', value: total, text: `경로 합계: ${resultText}`, coordinates: this.routeCoords });\r\n        this.updateMeasurementDisplay();\r\n        document.getElementById('measurementResult').innerHTML = `<div class=\"measurement-success\">✅ 경로 합계: ${resultText}<br/><small>${segments.join(' • ')}</small></div>`;\r\n        this.toast('멀티-스마트 거리 측정 완료');\r\n        this.resetMultiRoute();\r\n    }\r\n\r\n    resetMultiRoute() {\r\n        this.multiRouteActive = false;\r\n        this.routeCoords = [];\r\n        if (this.routeLineFeature) { this.vectorSource.removeFeature(this.routeLineFeature); this.routeLineFeature = null; }\r\n    }\r\n\r\n    updateSmartDistanceLine() {\r\n        // 라인 생성/업데이트\r\n        const line = new LineString(this.smartCoords);\r\n        if (!this.smartLineFeature) {\r\n            this.smartLineFeature = new Feature({ geometry: line });\r\n            this.smartLineFeature.set('type', 'measurement');\r\n            this.smartLineFeature.set('measurement', 'distance');\r\n            this.smartLineFeature.setStyle(new Style({\r\n                stroke: new Stroke({ color: '#28a745', width: 3, lineDash: [5, 5] })\r\n            }));\r\n            this.vectorSource.addFeature(this.smartLineFeature);\r\n        } else {\r\n            this.smartLineFeature.setGeometry(line);\r\n        }\r\n\r\n        const len = getLength(line);\r\n        if (!this.liveTooltipOverlay) {\r\n            const el = document.createElement('div');\r\n            el.className = 'toast';\r\n            el.style.pointerEvents = 'none';\r\n            this.liveTooltipOverlay = new Overlay({ element: el, offset: [10, -10], positioning: 'bottom-left' });\r\n            this.map.addOverlay(this.liveTooltipOverlay);\r\n        }\r\n        this.liveTooltipOverlay.getElement().textContent = this.formatDistance(len);\r\n        this.liveTooltipOverlay.setPosition(this.smartCoords[this.smartCoords.length - 1]);\r\n\r\n        // 스마트 모드 구간 배지\r\n        if (this.smartCoords.length >= 2) {\r\n            const a = this.smartCoords[this.smartCoords.length - 2];\r\n            const b = this.smartCoords[this.smartCoords.length - 1];\r\n            const mid = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n            const segLen = getLength(new LineString([a, b]));\r\n            if (!this.smartSegmentOverlay) {\r\n                const el = document.createElement('div');\r\n                el.className = 'toast';\r\n                el.style.pointerEvents = 'none';\r\n                this.smartSegmentOverlay = new Overlay({ element: el, offset: [0, -10], positioning: 'bottom-center' });\r\n                this.map.addOverlay(this.smartSegmentOverlay);\r\n            }\r\n            this.smartSegmentOverlay.getElement().textContent = this.formatDistance(segLen);\r\n            this.smartSegmentOverlay.setPosition(mid);\r\n        }\r\n    }\r\n\r\n    finishSmartDistance() {\r\n        if (!this.smartDistanceActive || this.smartCoords.length < 2) return;\r\n        const line = new LineString(this.smartCoords);\r\n        const length = getLength(line);\r\n        const resultText = this.formatDistance(length);\r\n        this.measurementResults.push({ type: 'distance', value: length, text: resultText, coordinates: this.smartCoords });\r\n        this.measurementHistory.unshift({ type: 'distance', value: length, text: resultText, when: new Date().toISOString() });\r\n        document.getElementById('measurementResult').innerHTML = `<div class=\"measurement-success\">✅ ${resultText} 측정 완료!</div>`;\r\n        this.updateMeasurementDisplay();\r\n        this.renderMeasureHistory();\r\n\r\n        // 상태 정리\r\n        this.smartDistanceActive = false;\r\n        if (this.liveTooltipOverlay) { this.map.removeOverlay(this.liveTooltipOverlay); this.liveTooltipOverlay = null; }\r\n        if (this.smartSegmentOverlay) { this.map.removeOverlay(this.smartSegmentOverlay); this.smartSegmentOverlay = null; }\r\n        if (this.smartClickKey) { this.map.un('click', this.smartClickKey); this.smartClickKey = null; }\r\n        if (this.smartDblKey) { this.map.un('dblclick', this.smartDblKey); this.smartDblKey = null; }\r\n    }\r\n\r\n    hideSearchResults() {\r\n        const searchResults = document.getElementById('searchResults');\r\n        searchResults.classList.remove('show');\r\n    }\r\n\r\n    showSearchLoading() {\r\n        const searchResults = document.getElementById('searchResults');\r\n        searchResults.innerHTML = '<div class=\"search-result-item loading\">🔍 검색 중...</div>';\r\n        searchResults.classList.add('show');\r\n    }\r\n\r\n    showSearchError(message) {\r\n        const searchResults = document.getElementById('searchResults');\r\n        searchResults.innerHTML = `<div class=\"search-result-item error\">❌ ${message}</div>`;\r\n        searchResults.classList.add('show');\r\n    }\r\n\r\n    goToLocation(lat, lon) {\r\n        console.log('🗺️ 위치로 이동:', lat, lon);\r\n        \r\n        const coordinates = transform([lon, lat], 'EPSG:4326', 'EPSG:3857');\r\n        console.log('📍 변환된 좌표:', coordinates);\r\n        \r\n        this.map.getView().animate({\r\n            center: coordinates,\r\n            zoom: 12,\r\n            duration: 1000\r\n        });\r\n        this.toast(`📍 ${lat.toFixed(4)}, ${lon.toFixed(4)} 로 이동`);\r\n\r\n        // 마커 추가\r\n        this.addSearchMarker(lat, lon);\r\n        \r\n        // 성공 메시지 표시\r\n        setTimeout(() => {\r\n            document.getElementById('measurementResult').innerHTML = \r\n                `<div class=\"measurement-success\">✅ 위치로 이동했습니다! (${lat.toFixed(4)}, ${lon.toFixed(4)})</div>`;\r\n        }, 500);\r\n    }\r\n\r\n    // 전체 화면 토글\r\n    bindFullscreen() {\r\n        const btn = document.getElementById('fullscreenToggle');\r\n        if (!btn) return;\r\n        btn.addEventListener('click', () => {\r\n            const docEl = document.documentElement;\r\n            if (!document.fullscreenElement) {\r\n                docEl.requestFullscreen?.();\r\n            } else {\r\n                document.exitFullscreen?.();\r\n            }\r\n        });\r\n    }\r\n\r\n    // 토스트 메시지\r\n    toast(message) {\r\n        const container = document.getElementById('toastContainer');\r\n        if (!container) return;\r\n        const el = document.createElement('div');\r\n        el.className = 'toast';\r\n        el.textContent = message;\r\n        container.appendChild(el);\r\n        setTimeout(() => {\r\n            el.remove();\r\n        }, 2000);\r\n    }\r\n\r\n    addSearchMarker(lat, lon) {\r\n        const coordinates = transform([lon, lat], 'EPSG:4326', 'EPSG:3857');\r\n        const point = new Point(coordinates);\r\n        \r\n        const feature = new Feature({\r\n            geometry: point,\r\n            type: 'marker',\r\n            search: true\r\n        });\r\n\r\n        this.vectorSource.addFeature(feature);\r\n        \r\n        // 3초 후 마커 제거\r\n        setTimeout(() => {\r\n            this.vectorSource.removeFeature(feature);\r\n        }, 3000);\r\n    }\r\n\r\n    // 이벤트 리스너 초기화\r\n    initEventListeners() {\r\n        // 레이어 선택 이벤트\r\n        document.getElementById('layerSelect').addEventListener('change', (e) => {\r\n            this.switchLayer(e.target.value);\r\n        });\r\n\r\n        // 도구 버튼 이벤트\r\n        document.getElementById('measureDistance').addEventListener('click', () => {\r\n            this.activateTool('distance');\r\n        });\r\n\r\n        document.getElementById('measureArea').addEventListener('click', () => {\r\n            this.activateTool('area');\r\n        });\r\n\r\n        document.getElementById('addMarker').addEventListener('click', () => {\r\n            this.activateTool('marker');\r\n        });\r\n\r\n        document.getElementById('clearAll').addEventListener('click', () => {\r\n            this.clearAllFeatures();\r\n        });\r\n\r\n        document.getElementById('exportData').addEventListener('click', () => {\r\n            this.exportData();\r\n        });\r\n    }\r\n\r\n    // 측정 패널 버튼 바인딩\r\n    bindMeasureButtons() {\r\n        const finishBtn = document.getElementById('finishMeasure');\r\n        const cancelBtn = document.getElementById('cancelMeasure');\r\n        const resetBtn = document.getElementById('resetMeasure');\r\n        if (finishBtn) finishBtn.addEventListener('click', () => this.finishAnyMeasurement());\r\n        if (cancelBtn) cancelBtn.addEventListener('click', () => this.cancelAnyMeasurement());\r\n        if (resetBtn) resetBtn.addEventListener('click', () => this.resetCurrentMeasurement());\r\n    }\r\n\r\n    finishAnyMeasurement() {\r\n        // 우선순위: Draw → 스마트 → 멀티 경로\r\n        if (this.draw) {\r\n            this.draw.finishDrawing?.();\r\n            return;\r\n        }\r\n        if (this.smartDistanceActive) {\r\n            this.finishSmartDistance();\r\n            return;\r\n        }\r\n        if (this.multiRouteActive) {\r\n            this.finishMultiRoute();\r\n            return;\r\n        }\r\n        this.toast('진행 중인 측정이 없습니다.');\r\n    }\r\n\r\n    cancelAnyMeasurement() {\r\n        // Draw 측정 취소 및 정리\r\n        if (this.draw) {\r\n            this.deactivateCurrentTool();\r\n        }\r\n        // 스마트 측정 정리\r\n        if (this.smartDistanceActive) {\r\n            this.smartDistanceActive = false;\r\n            this.smartCoords = [];\r\n            this.smartStartCoord = null;\r\n            if (this.smartLineFeature) { this.vectorSource.removeFeature(this.smartLineFeature); this.smartLineFeature = null; }\r\n        }\r\n        // 멀티 경로 정리\r\n        if (this.multiRouteActive) {\r\n            this.resetMultiRoute();\r\n        }\r\n        // 오버레이/선택패널 정리\r\n        if (this.liveTooltipOverlay) { this.map.removeOverlay(this.liveTooltipOverlay); this.liveTooltipOverlay = null; }\r\n        if (this.segmentOverlay) { this.map.removeOverlay(this.segmentOverlay); this.segmentOverlay = null; }\r\n        if (this.smartSegmentOverlay) { this.map.removeOverlay(this.smartSegmentOverlay); this.smartSegmentOverlay = null; }\r\n        const panel = document.getElementById('routeChoice');\r\n        if (panel) panel.style.display = 'none';\r\n        this.toast('측정을 취소했습니다.');\r\n    }\r\n\r\n    resetCurrentMeasurement() {\r\n        // 스마트 측정: 시작점만 남기고 초기화\r\n        if (this.smartDistanceActive && this.smartStartCoord) {\r\n            this.smartCoords = [this.smartStartCoord];\r\n            if (this.smartLineFeature) {\r\n                this.smartLineFeature.setGeometry(new LineString(this.smartCoords));\r\n            } else {\r\n                this.updateSmartDistanceLine();\r\n            }\r\n            this.toast('스마트 거리 측정을 시작점으로 초기화했습니다.');\r\n            return;\r\n        }\r\n        // 멀티 경로: 첫 지점만 남기고 초기화\r\n        if (this.multiRouteActive && this.routeCoords.length > 0) {\r\n            this.routeCoords = [this.routeCoords[0]];\r\n            this.updateRoutePreview();\r\n            this.toast('경로를 시작점으로 초기화했습니다.');\r\n            return;\r\n        }\r\n        this.toast('초기화할 진행 중 측정이 없습니다.');\r\n    }\r\n\r\n    // 레이어 전환\r\n    switchLayer(layerType) {\r\n        Object.values(this.layers).forEach(layer => {\r\n            layer.setVisible(false);\r\n        });\r\n        \r\n        if (this.layers[layerType]) {\r\n            this.layers[layerType].setVisible(true);\r\n        }\r\n    }\r\n\r\n    // 도구 활성화\r\n    activateTool(toolType) {\r\n        this.deactivateCurrentTool();\r\n        \r\n        // 버튼 상태 업데이트\r\n        document.querySelectorAll('.tool-btn').forEach(btn => {\r\n            btn.classList.remove('active');\r\n        });\r\n        \r\n        const buttonMap = {\r\n            'distance': 'measureDistance',\r\n            'area': 'measureArea',\r\n            'marker': 'addMarker'\r\n        };\r\n        \r\n        if (buttonMap[toolType]) {\r\n            document.getElementById(buttonMap[toolType]).classList.add('active');\r\n        }\r\n\r\n        this.currentTool = toolType;\r\n\r\n        switch (toolType) {\r\n            case 'distance':\r\n                this.startDistanceMeasurement();\r\n                break;\r\n            case 'area':\r\n                this.startAreaMeasurement();\r\n                break;\r\n            case 'marker':\r\n                // 마커 모드 활성화 (클릭 이벤트는 이미 설정됨)\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 현재 도구 비활성화\r\n    deactivateCurrentTool() {\r\n        if (this.draw) {\r\n            this.map.removeInteraction(this.draw);\r\n            this.draw = null;\r\n        }\r\n        if (this.snap) {\r\n            this.map.removeInteraction(this.snap);\r\n            this.snap = null;\r\n        }\r\n        if (this.modify) {\r\n            this.map.removeInteraction(this.modify);\r\n            this.modify = null;\r\n        }\r\n        if (this.measurementListener) {\r\n            unByKey(this.measurementListener);\r\n            this.measurementListener = null;\r\n        }\r\n        if (this.distanceOverlay) {\r\n            this.map.removeOverlay(this.distanceOverlay);\r\n            this.distanceOverlay = null;\r\n        }\r\n        \r\n        this.currentTool = null;\r\n    }\r\n\r\n    // 거리 측정 시작\r\n    startDistanceMeasurement() {\r\n        console.log('📏 거리 측정 시작');\r\n        \r\n        // 사용자 안내 메시지\r\n        document.getElementById('measurementResult').innerHTML = \r\n            '<div class=\"measurement-guide\">지도에서 두 지점을 클릭하여 거리를 측정하세요.</div>';\r\n\r\n        // 기존 인터랙션 제거\r\n        this.deactivateCurrentTool();\r\n\r\n        // Draw 인터랙션 생성\r\n        this.draw = new Draw({\r\n            source: this.vectorSource,\r\n            type: 'LineString',\r\n            style: new Style({\r\n                stroke: new Stroke({\r\n                    color: '#00ff00',\r\n                    width: 3,\r\n                    lineDash: [5, 5]\r\n                }),\r\n                image: new CircleStyle({\r\n                    radius: 8,\r\n                    fill: new Fill({\r\n                        color: '#00ff00'\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#ffffff',\r\n                        width: 2\r\n                    })\r\n                })\r\n            })\r\n        });\r\n\r\n        // 인터랙션을 지도에 추가\r\n        this.map.addInteraction(this.draw);\r\n        console.log('✅ Draw 인터랙션 추가됨');\r\n\r\n        // 그리기 시작 이벤트\r\n        this.draw.on('drawstart', (event) => {\r\n            console.log('🎯 그리기 시작됨');\r\n            document.getElementById('measurementResult').innerHTML = \r\n                '<div class=\"measurement-guide\">두 번째 지점을 클릭하세요.</div>';\r\n            // 라이브 툴팁 준비\r\n            if (!this.liveTooltipOverlay) {\r\n                const el = document.createElement('div');\r\n                el.className = 'toast';\r\n                el.style.pointerEvents = 'none';\r\n                this.liveTooltipOverlay = new Overlay({ element: el, offset: [10, -10], positioning: 'bottom-left' });\r\n                this.map.addOverlay(this.liveTooltipOverlay);\r\n            }\r\n            const sketch = event.feature;\r\n            sketch.getGeometry().on('change', (e) => {\r\n                const geom = e.target;\r\n                const coords = geom.getCoordinates();\r\n                if (coords && coords.length >= 2) {\r\n                    const len = getLength(geom);\r\n                    this.liveTooltipOverlay.getElement().textContent = this.formatDistance(len);\r\n                    this.liveTooltipOverlay.setPosition(coords[coords.length - 1]);\r\n                    // 마지막 구간 배지\r\n                    const lastSeg = [coords[coords.length - 2], coords[coords.length - 1]];\r\n                    const mid = [(lastSeg[0][0] + lastSeg[1][0]) / 2, (lastSeg[0][1] + lastSeg[1][1]) / 2];\r\n                    const segLen = getLength(new LineString(lastSeg));\r\n                    if (!this.segmentOverlay) {\r\n                        const el = document.createElement('div');\r\n                        el.className = 'toast';\r\n                        el.style.pointerEvents = 'none';\r\n                        this.segmentOverlay = new Overlay({ element: el, offset: [0, -10], positioning: 'bottom-center' });\r\n                        this.map.addOverlay(this.segmentOverlay);\r\n                    }\r\n                    this.segmentOverlay.getElement().textContent = this.formatDistance(segLen);\r\n                    this.segmentOverlay.setPosition(mid);\r\n                    // 패널 자동 주목\r\n                    const panel = document.getElementById('measurementResult');\r\n                    if (panel) {\r\n                        panel.classList.remove('panel-highlight');\r\n                        void panel.offsetWidth;\r\n                        panel.classList.add('panel-highlight');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // 그리기 완료 이벤트\r\n        this.draw.on('drawend', (event) => {\r\n            console.log('✅ 그리기 완료됨');\r\n            const feature = event.feature;\r\n            const geometry = feature.getGeometry();\r\n            const coordinates = geometry.getCoordinates();\r\n            \r\n            console.log('📍 좌표 개수:', coordinates.length);\r\n            console.log('📍 좌표:', coordinates);\r\n            \r\n            if (coordinates.length >= 2) {\r\n                const length = getLength(geometry);\r\n                console.log('📏 계산된 거리:', length);\r\n                \r\n                // 측정 결과를 피처에 저장\r\n                feature.set('type', 'measurement');\r\n                feature.set('measurement', 'distance');\r\n                feature.set('value', length);\r\n                feature.set('coordinates', coordinates);\r\n                \r\n                // 측정 결과를 배열에 저장\r\n                const resultText = this.formatDistance(length);\r\n                this.measurementResults.push({\r\n                    type: 'distance',\r\n                    value: length,\r\n                    text: resultText,\r\n                    coordinates: coordinates\r\n                });\r\n                \r\n                console.log('💾 측정 결과 추가됨:', resultText);\r\n                \r\n                // 성공 메시지 표시\r\n                document.getElementById('measurementResult').innerHTML = \r\n                    `<div class=\"measurement-success\">✅ ${resultText} 측정 완료!</div>`;\r\n                \r\n                // 측정 결과 표시 업데이트\r\n                setTimeout(() => {\r\n                    this.updateMeasurementDisplay();\r\n                }, 1000);\r\n                \r\n                // 도구 유지(연속 측정), 오버레이 제거\r\n                if (this.liveTooltipOverlay) {\r\n                    this.map.removeOverlay(this.liveTooltipOverlay);\r\n                    this.liveTooltipOverlay = null;\r\n                }\r\n                if (this.segmentOverlay) {\r\n                    this.map.removeOverlay(this.segmentOverlay);\r\n                    this.segmentOverlay = null;\r\n                }\r\n                // 라이브 툴팁 제거\r\n                if (this.liveTooltipOverlay) {\r\n                    this.map.removeOverlay(this.liveTooltipOverlay);\r\n                    this.liveTooltipOverlay = null;\r\n                }\r\n            } else {\r\n                console.log('❌ 좌표가 부족합니다');\r\n                document.getElementById('measurementResult').innerHTML = \r\n                    '<div class=\"measurement-guide\">두 개 이상의 지점을 클릭해주세요.</div>';\r\n            }\r\n        });\r\n\r\n        // 단축키: Enter/ESC/Backspace, 패널 버튼과 연동\r\n        const keyHandler = (e) => {\r\n            if (e.key === 'Enter') {\r\n                this.draw.finishDrawing?.();\r\n            } else if (e.key === 'Escape') {\r\n                this.deactivateCurrentTool();\r\n                if (this.liveTooltipOverlay) { this.map.removeOverlay(this.liveTooltipOverlay); this.liveTooltipOverlay = null; }\r\n            } else if (e.key === 'Backspace') {\r\n                this.draw.removeLastPoint?.();\r\n            }\r\n        };\r\n        document.addEventListener('keydown', keyHandler, { once: false });\r\n        const finishBtn = document.getElementById('finishMeasure');\r\n        const cancelBtn = document.getElementById('cancelMeasure');\r\n        if (finishBtn) finishBtn.onclick = () => this.draw.finishDrawing?.();\r\n        if (cancelBtn) cancelBtn.onclick = () => { this.deactivateCurrentTool(); if (this.liveTooltipOverlay) { this.map.removeOverlay(this.liveTooltipOverlay); this.liveTooltipOverlay = null; } };\r\n    }\r\n\r\n    // 거리 포맷팅\r\n    formatDistance(length) {\r\n        if (length < 1000) {\r\n            return `거리: ${length.toFixed(1)} m`;\r\n        } else if (length < 100000) {\r\n            return `거리: ${(length / 1000).toFixed(3)} km`;\r\n        } else {\r\n            return `거리: ${(length / 1000).toFixed(1)} km`;\r\n        }\r\n    }\r\n\r\n    // 면적 측정 시작\r\n    startAreaMeasurement() {\r\n        console.log('📐 면적 측정 시작');\r\n        \r\n        // 사용자 안내 메시지\r\n        document.getElementById('measurementResult').innerHTML = \r\n            '<div class=\"measurement-guide\">지도에서 다각형을 그려 면적을 측정하세요.</div>';\r\n\r\n        this.draw = new Draw({\r\n            source: this.vectorSource,\r\n            type: 'Polygon',\r\n            style: this.getMeasurementStyle()\r\n        });\r\n\r\n        this.snap = new Snap({ source: this.vectorSource });\r\n        this.modify = new Modify({ source: this.vectorSource });\r\n\r\n        this.map.addInteraction(this.draw);\r\n        this.map.addInteraction(this.snap);\r\n        this.map.addInteraction(this.modify);\r\n\r\n        this.measurementListener = this.draw.on('drawend', (event) => {\r\n            console.log('✅ 면적 측정 완료');\r\n            const feature = event.feature;\r\n            const geometry = feature.getGeometry();\r\n            const area = getArea(geometry);\r\n            \r\n            console.log('📐 계산된 면적:', area);\r\n            \r\n            // 측정 결과를 피처에 저장\r\n            feature.set('type', 'measurement');\r\n            feature.set('measurement', 'area');\r\n            feature.set('value', area);\r\n            \r\n            // 측정 결과를 배열에 저장\r\n            const resultText = this.formatArea(area);\r\n            this.measurementResults.push({\r\n                type: 'area',\r\n                value: area,\r\n                text: resultText\r\n            });\r\n            \r\n            console.log('💾 측정 결과 추가됨:', resultText);\r\n            \r\n            // 측정 결과 표시 업데이트\r\n            this.updateMeasurementDisplay();\r\n            \r\n            // 성공 메시지 표시\r\n            document.getElementById('measurementResult').innerHTML = \r\n                `<div class=\"measurement-success\">✅ ${resultText} 측정 완료!</div>`;\r\n            \r\n            // 측정 완료 후 도구 비활성화\r\n            setTimeout(() => {\r\n                this.deactivateCurrentTool();\r\n                document.getElementById('measureArea').classList.remove('active');\r\n                this.updateMeasurementDisplay();\r\n            }, 3000);\r\n        });\r\n    }\r\n\r\n    // 면적 포맷팅\r\n    formatArea(area) {\r\n        if (area < 1000000) {\r\n            return `면적: ${(area / 10000).toFixed(2)} ha`;\r\n        } else {\r\n            return `면적: ${(area / 1000000).toFixed(3)} km²`;\r\n        }\r\n    }\r\n\r\n    // 측정 결과 표시 업데이트\r\n    updateMeasurementDisplay() {\r\n        const resultElement = document.getElementById('measurementResult');\r\n        if (this.measurementResults.length === 0) {\r\n            resultElement.innerHTML = '측정 결과가 없습니다.';\r\n            return;\r\n        }\r\n        \r\n        let html = '<div class=\"measurement-list\">';\r\n        this.measurementResults.forEach((result, index) => {\r\n            html += `<div class=\"measurement-item\">\r\n                <span class=\"measurement-text\">${result.text}</span>\r\n                <button class=\"remove-measurement\" onclick=\"window.webgisMap.removeMeasurement(${index})\">×</button>\r\n            </div>`;\r\n        });\r\n        html += '</div>';\r\n        \r\n        resultElement.innerHTML = html;\r\n\r\n        // 자동 스크롤 및 하이라이트: 최근 결과로 스크롤\r\n        const container = resultElement;\r\n        const lastItem = container.querySelector('.measurement-item:last-child');\r\n        if (lastItem) {\r\n            lastItem.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n            container.classList.remove('panel-highlight');\r\n            void container.offsetWidth; // reflow to restart animation\r\n            container.classList.add('panel-highlight');\r\n        }\r\n        // 측정 이력도 동기 스크롤\r\n        this.renderMeasureHistory();\r\n    }\r\n\r\n    renderMeasureHistory() {\r\n        const el = document.getElementById('measureHistoryList');\r\n        if (!el) return;\r\n        if (!this.measurementHistory.length) {\r\n            el.innerHTML = '<div class=\"empty\">이력이 없습니다.</div>';\r\n            return;\r\n        }\r\n        el.innerHTML = this.measurementHistory.slice(0, 10).map(h => `\r\n            <div class=\"measurement-item\">\r\n                <span class=\"measurement-text\">${h.text}</span>\r\n                <small style=\"margin-left:6px;opacity:.7;\">${h.when.slice(11,16)}</small>\r\n            </div>\r\n        `).join('');\r\n    }\r\n\r\n    // 개별 측정 결과 삭제\r\n    removeMeasurement(index) {\r\n        this.measurementResults.splice(index, 1);\r\n        this.updateMeasurementDisplay();\r\n    }\r\n\r\n    // 마커 추가\r\n    addMarker(coordinate) {\r\n        console.log('📍 마커 추가:', coordinate);\r\n        \r\n        const marker = new Feature({\r\n            geometry: new Point(coordinate)\r\n        });\r\n        \r\n        marker.set('type', 'marker');\r\n        marker.setStyle(this.getMarkerStyle());\r\n        \r\n        this.vectorSource.addFeature(marker);\r\n        \r\n        // 성공 메시지 표시\r\n        const lonLat = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\r\n        document.getElementById('measurementResult').innerHTML = \r\n            `<div class=\"measurement-success\">✅ 마커가 추가되었습니다! (${lonLat[1].toFixed(4)}, ${lonLat[0].toFixed(4)})</div>`;\r\n        \r\n        console.log('✅ 마커 추가 완료');\r\n    }\r\n\r\n    // 모든 피처 삭제\r\n    clearAllFeatures() {\r\n        // 확인 대화상자 표시\r\n        if (confirm('모든 측정 데이터와 마커를 삭제하시겠습니까?')) {\r\n            this.vectorSource.clear();\r\n            this.measurementResults = [];\r\n            this.updateMeasurementDisplay();\r\n            \r\n            // 버튼 상태 초기화\r\n            document.querySelectorAll('.tool-btn').forEach(btn => {\r\n                btn.classList.remove('active');\r\n            });\r\n            \r\n            // 현재 도구 비활성화\r\n            this.deactivateCurrentTool();\r\n        }\r\n    }\r\n\r\n    // 데이터 내보내기\r\n    exportData() {\r\n        const features = this.vectorSource.getFeatures();\r\n        if (features.length === 0) {\r\n            alert('내보낼 데이터가 없습니다.');\r\n            return;\r\n        }\r\n\r\n        const exportData = {\r\n            type: 'FeatureCollection',\r\n            features: features.map(feature => {\r\n                const geometry = feature.getGeometry();\r\n                const coordinates = geometry.getCoordinates();\r\n                \r\n                // 좌표계 변환 (EPSG:3857 -> EPSG:4326)\r\n                const transformedCoords = this.transformCoordinates(coordinates, geometry.getType());\r\n                \r\n                return {\r\n                    type: 'Feature',\r\n                    geometry: {\r\n                        type: geometry.getType(),\r\n                        coordinates: transformedCoords\r\n                    },\r\n                    properties: {\r\n                        type: feature.get('type'),\r\n                        measurement: feature.get('measurement'),\r\n                        value: feature.get('value')\r\n                    }\r\n                };\r\n            }),\r\n            measurements: this.measurementResults\r\n        };\r\n\r\n        const dataStr = JSON.stringify(exportData, null, 2);\r\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n        const url = URL.createObjectURL(dataBlob);\r\n        \r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `webgis_data_${new Date().toISOString().slice(0, 10)}.json`;\r\n        link.click();\r\n        \r\n        URL.revokeObjectURL(url);\r\n    }\r\n\r\n    // 좌표 변환\r\n    transformCoordinates(coordinates, geometryType) {\r\n        if (geometryType === 'Point') {\r\n            return transform(coordinates, 'EPSG:3857', 'EPSG:4326');\r\n        } else if (geometryType === 'LineString') {\r\n            return coordinates.map(coord => transform(coord, 'EPSG:3857', 'EPSG:4326'));\r\n        } else if (geometryType === 'Polygon') {\r\n            return coordinates.map(ring => \r\n                ring.map(coord => transform(coord, 'EPSG:3857', 'EPSG:4326'))\r\n            );\r\n        }\r\n        return coordinates;\r\n    }\r\n\r\n    // 피처별 스타일 적용\r\n    getFeatureStyle(feature) {\r\n        const type = feature.get('type');\r\n        \r\n        if (type === 'measurement') {\r\n            const measurement = feature.get('measurement');\r\n            const value = feature.get('value');\r\n            \r\n            if (measurement === 'distance') {\r\n                return this.getDistanceStyle(value);\r\n            } else if (measurement === 'area') {\r\n                return this.getAreaStyle(value);\r\n            }\r\n        } else if (type === 'marker') {\r\n            return this.getMarkerStyle();\r\n        }\r\n        \r\n        return this.getDefaultStyle();\r\n    }\r\n\r\n    // 기본 스타일\r\n    getDefaultStyle() {\r\n        return new Style({\r\n            stroke: new Stroke({\r\n                color: '#ff4757',\r\n                width: 2\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255, 71, 87, 0.2)'\r\n            }),\r\n            image: new CircleStyle({\r\n                radius: 7,\r\n                fill: new Fill({\r\n                    color: '#ff4757'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    // 거리 측정 그리기 스타일\r\n    getDistanceDrawingStyle() {\r\n        return new Style({\r\n            stroke: new Stroke({\r\n                color: '#2ed573',\r\n                width: 3,\r\n                lineDash: [5, 5]\r\n            }),\r\n            image: new CircleStyle({\r\n                radius: 6,\r\n                fill: new Fill({\r\n                    color: '#2ed573'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    // 측정용 스타일\r\n    getMeasurementStyle() {\r\n        return new Style({\r\n            stroke: new Stroke({\r\n                color: '#2ed573',\r\n                width: 3\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(46, 213, 115, 0.2)'\r\n            }),\r\n            image: new CircleStyle({\r\n                radius: 6,\r\n                fill: new Fill({\r\n                    color: '#2ed573'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    // 거리 측정 스타일\r\n    getDistanceStyle(length) {\r\n        return new Style({\r\n            stroke: new Stroke({\r\n                color: '#2ed573',\r\n                width: 3\r\n            }),\r\n            image: new CircleStyle({\r\n                radius: 6,\r\n                fill: new Fill({\r\n                    color: '#2ed573'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                })\r\n            }),\r\n            text: new Text({\r\n                text: this.formatDistance(length),\r\n                font: '14px Arial',\r\n                fill: new Fill({\r\n                    color: '#2ed573'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                }),\r\n                offsetY: -10\r\n            })\r\n        });\r\n    }\r\n\r\n    // 면적 측정 스타일\r\n    getAreaStyle(area) {\r\n        return new Style({\r\n            stroke: new Stroke({\r\n                color: '#2ed573',\r\n                width: 3\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(46, 213, 115, 0.2)'\r\n            }),\r\n            text: new Text({\r\n                text: this.formatArea(area),\r\n                font: '14px Arial',\r\n                fill: new Fill({\r\n                    color: '#2ed573'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#fff',\r\n                    width: 2\r\n                }),\r\n                offsetY: 0\r\n            })\r\n        });\r\n    }\r\n\r\n    // 마커 스타일\r\n    getMarkerStyle() {\r\n        return new Style({\r\n            image: new Icon({\r\n                anchor: [0.5, 1],\r\n                src: 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"%23ff4757\"><path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/></svg>'\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n// 애플리케이션 시작\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    window.webgisMap = new WebGISMap();\r\n    console.log('🌍 WebGIS 애플리케이션이 성공적으로 로드되었습니다!');\r\n}); "],"names":["BaseEvent","type","ObjectEventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","EventType$1","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","EventType","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","ua","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","assert","assertion","errorMessage","create","set","transform","c","d","e","setFromArray","transform1","transform2","apply","coordinate","x","y","makeScale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","node","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","rgb","xyz","_xyz","white","z","g","r","luv","arg","o","_u","_v","l","u","v","xn","yn","zn","un","vn","k","yr","lchuv","h","hr","names","baseHues","parse","cstr","m","parts","alpha","space","base","isShort","name","dims","_b","_a","hsl","s","t1","t2","t3","min","max","delta","rgba","color","parsed","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","j","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","asString","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","LayerProperty","BaseLayer","properties","managed","state","zIndex","states","background","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","ViewHint","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","point","PROJECTIONS","fromEPSG4326","input","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","get","add","transforms","destination","sourceCode","destinationCode","closestOnCircle","circle","closestOnSegment","segment","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","getLength","geometry","coords","jj","geometries","getAreaInternal","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","width","height","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","pixel","view","frameState","map","layerState","layerExtent","inView","getAttributions","attributions","layerRenderer","RenderEventType","layerStatesArray","arrayLayerState","viewState","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","feature","layer","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","iconImageCache","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","label","contextInstructions","CompositeMapRenderer","container","declutterLayers","previousElement","sourceState","layers","GroupEvent","LayerGroup","id","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileState","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","visibleAttributions","collapsible","collapsed","Rotate","compassClassName","button","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","all","conditions","pass","altKeyOnly","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","group","renderer","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","ImageState","LayerRenderer","tiles","tileRange","image","imageState","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","pixelRatio","Tile","tileCoord","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","error","load","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","ImageTile","tileLoadFunction","getBlankImage","ctx","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","render","triangulation","sources","gutter","renderEdges","interpolate","drawSingle","pixelRound","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","TileRange","CanvasTileLayerRenderer","tileLayer","tileState","tilePixelRatio","tileOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpExtent","tmpTileRange","viewport","uid","inTransition","childTileRange","covered","canvasScale","canvasTransform","toTransformString","zs","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","usedTiles","tileCallback","wantedTiles","tileCount","TileLayer","quickselect","left","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","ImageStyle","displacement","rotateWithView","asColorLike","RegularShape","fill","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","angle0","radiusC","CircleStyle","Fill","Stroke","Style","defaultGeometryFunction","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","blue","taintedTestContext","IconImage","cacheKey","calculateScale","wantedWidth","wantedHeight","Icon","getIconImage","onload","imageSize","iconImageSize","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","textAlign","justify","textBaseline","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","getTypeFromHint","typeHint","encoded","parseCallExpression","Ops","parsers","createParser","_","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","needleType","colors","parsedColors","returnType","argValidators","actualType","parser","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","compileInterpolateExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","pointsName","requireNumber","radius1","shape","evaluateRadius","Circle","requireColorLike","requireNumberArray","requireSizeLike","BaseVectorLayer","RBush","renderOrder","toStyleLike","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","sharedData","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","localTransform","close","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","endWorld","world","compositionContext","transformToString","declutterExecutorGroup","clipped","intersectsExtent","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","VectorLayer","RBush_","extents","rbush","Feature","geometryOrProperties","createStyleFunction","circleExtent","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","clonedGeometries","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","LineString","lineString","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiPoint","multiPoint","MultiPolygon","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","RenderFeature","Source","adaptAttributions","self","attributionLike","VectorEventType","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","LRUCache","highWaterMark","entry","getKeyZXY","fromKey","hash","withinExtentAndZ","TileCache","TileEventType","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","getTileGridForProjection","scaleSize","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","charCode","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","dpi","pointResolutionUnits","minWidth","maxWidth","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","resolutionScale","mapScale","stepWidth","scaleSteps","cls","isLast","lengthString","inchesPerMeter","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","ring","sharedRel","py","Draw","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","move","lowerLeft","upperRight","previouslyForward","currentlyForward","fromIndex","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempSegment","ModifyEventType","ModifyEvent","Modify","writer","segments","ss","rBush","nodesToRemove","nodeToRemove","segmentData","lines","rings","centerSegmentData","circumferenceSegmentData","featureSegments","vertexFeature","vertex","dragSegment","depth","coordinateDistance","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","geom","viewExtent","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","newSegmentData","newSegmentData2","dragSegments","segmentsByFeature","deleted","component","newIndex","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SnapEventType","SnapEvent","getFeatureFromEvent","Snap","register","feature_uid","segmenter","segmentsData","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","WebGISMap","osmLayer","satelliteLayer","terrainLayer","lonLat","extent3857","searchInput","searchBtn","searchResults","activeIndex","searchTimeout","el","query","response","results","headerHTML","resultsHTML","details","clearBtn","content","lat","lon","btn","list","saved","next","start3857","coord3857","panel","nameEl","addMid","addLast","cancelBtn","searchEl","rect","onChooseMid","onChooseLast","onCancel","total","seg","resultText","segLen","message","docEl","finishBtn","resetBtn","layerType","toolType","buttonMap","lastSeg","keyHandler","_d","_c","resultElement","lastItem","marker","exportData","transformedCoords","dataStr","dataBlob","link","measurement"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194]}